<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:math="http://www.w3.org/2005/xpath-functions/math"
    xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl"
    xmlns:mei="http://www.music-encoding.org/ns/mei"
    exclude-result-prefixes="xs math xd mei"
    version="3.0">
    <xd:doc scope="stylesheet">
        <xd:desc>
            <xd:p><xd:b>Created on:</xd:b> May 10, 2016</xd:p>
            <xd:p><xd:b>Author:</xd:b> Johannes Kepper</xd:p>
            <xd:p><xd:b>License:</xd:b> AGPL3.0</xd:p>
            <xd:p>This stylesheet is used to extract measure positions for use with Edirom Online. It is operated on the individual source files (freidi-musicSource_XY.xml).</xd:p>
        </xd:desc>
    </xd:doc>
    
    <xsl:output method="xml" indent="yes"/>
    
    <xsl:template match="/">
        
        <xsl:variable name="doc.uri" select="substring-before(string(document-uri()),'freidi-musicSource_')" as="xs:string?"/>
        <xsl:variable name="source.id" select="substring-before(substring-after(string(document-uri()),'/freidi-musicSource_'),'.xml')" as="xs:string?"/>
        
        <xsl:if test="not($doc.uri)">
            <xsl:message terminate="yes" select="'ERROR: This xslt must be run on a source file.xml.'"/>
        </xsl:if>
        
        <xsl:result-document href="{concat($doc.uri,'../ready-for-use/ediromMeasures/freidi-musicSource_',$source.id,'.xml')}">
            <xsl:apply-templates/>
        </xsl:result-document>
        
    </xsl:template>
    
    <xsl:template match="mei:mei">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <xsl:comment>
                Attention: This file has been generated by buildEdiromMeasures.xsl on <xsl:value-of select="current-dateTime()"/>.
                Do not change this file manually, but instead change the original file and re-run the XSLT. The original file is
                <xsl:value-of select="tokenize(document-uri(/),'/')[last()]"/>, version <xsl:value-of select="(//mei:identifier[@type = 'FreiDi.internal.version'])[1]/@n"/> 
                (<xsl:value-of select="(//mei:identifier[@type = 'FreiDi.internal.version'])[1]/parent::mei:edition/mei:date/@isodate"/>).
            </xsl:comment>
            <xsl:apply-templates select="node()"/>
        </xsl:copy>
    </xsl:template>
    
    <xsl:template match="mei:measure">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
        </xsl:copy>
    </xsl:template>
    
    <xsl:template match="mei:surface">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <xsl:apply-templates select="mei:graphic"/>
            <xsl:apply-templates select="mei:zone[@type = 'measure']"/>
        </xsl:copy>
    </xsl:template>
    
    <xsl:template match="node() | @*" mode="#all">
        <xsl:copy>
            <xsl:apply-templates select="node() | @*" mode="#current"/>
        </xsl:copy>
    </xsl:template>
    
</xsl:stylesheet>